name: Deploy APK

on:
  workflow_dispatch:
    inputs:
      build_debug_apk:
        type: boolean
        description: "Deploy Debug version"
        default: false
        required: false
      test_groups_debug:
        description: "Test Groups - Debug"
        required: false
      #      testers_debug:
      #        description: "Testers - Debug"
      #        required: false
      release_notes_debug:
        description: "Release notes - Debug"
        required: false

      build_release_apk:
        type: boolean
        description: "Deploy Release version"
        default: false
        required: false
      test_groups_release:
        description: "Test Groups - Release"
        required: false
      #      testers_release:
      #        description: "Testers - Release"
      #        required: false
      release_notes_release:
        description: "Release notes - Release"
        required: false

      build_sandbox_apk:
        type: boolean
        description: "Deploy Sandbox version"
        default: false
        required: false
      test_groups_sandbox:
        description: "Test Groups - Sandbox"
        required: false
      #      testers_sandbox:
      #        description: "Testers - Sandbox"
      #        required: false
      release_notes_sandbox:
        description: "Release notes - Sandbox"
        required: false

env:
  INPUT_BUILD_DEBUG_APK: ${{ github.event.inputs.build_debug_apk }}
  INPUT_BUILD_RELEASE_APK: ${{ github.event.inputs.build_release_apk }}
  INPUT_BUILD_SANDBOX_APK: ${{ github.event.inputs.build_sandbox_apk }}

  TEST_GROUPS_DEBUG: ${{ github.event.inputs.test_groups_debug }}
  TEST_GROUPS_RELEASE: ${{ github.event.inputs.test_groups_release || 'test' }}
  TEST_GROUPS_SANDBOX: ${{ github.event.inputs.test_groups_sandbox }}

  #  TESTERS_DEBUG: ${{ github.event.inputs.testers_debug }}
  #  TESTERS_RELEASE: ${{ github.event.inputs.testers_release }}
  #  TESTERS_SANDBOX: ${{ github.event.inputs.testers_sandbox }}

  RELEASE_NOTES_DEBUG: ${{ github.event.inputs.release_notes_debug }}
  RELEASE_NOTES_RELEASE: ${{ github.event.inputs.release_notes_release }}
  RELEASE_NOTES_SANDBOX: ${{ github.event.inputs.release_notes_sandbox }}

jobs:
  build:
    if: ${{ github.event.inputs.build_debug_apk == 'true' || github.event.inputs.build_release_apk == 'true' }}
    runs-on: ubuntu-latest
    name: Deploy to Firebase App Distribution
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Upload Debug APK to Firebase App Distribution
        if: ${{ env.INPUT_BUILD_DEBUG_APK == 'true' }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: -q assembleDebug appDistributionUploadDebug --releaseNotes="${{ env.RELEASE_NOTES_DEBUG }}"

      #      - name: Set Test Release Groups output
      #        id: groups
      #        run: |
      #         USER_INPUT_TEST_GROUPS_RELEASE=${{ env.TEST_GROUPS_RELEASE }}
      #         echo "::set-output groups=value::${USER_INPUT_TEST_GROUPS_RELEASE:-"-"}"


      #      - name: Save state
      #        run: echo "{name}={value}" >> $GITHUB_STATE
      #
      #      - name: Set output
      #        run: echo "{name}={value}" >> $GITHUB_OUTPUT

      - name: Upload Release APK to Firebase App Distribution
        if: ${{ env.INPUT_BUILD_RELEASE_APK == 'true' }}
        run: ./gradlew assembleRelease appDistributionUploadRelease --groups="${{ env.TEST_GROUPS_RELEASE }}" --releaseNotes="${{ env.RELEASE_NOTES_DEBUG || 'default' }}"

#  build2:
#    needs: [ build ]
#    if: |
#      (always() && !cancelled()) &&
#      (needs.build.result == 'success' || needs.build.result == 'skipped') &&
#      (github.event.inputs.build_release_apk == 'true')
#    runs-on: ubuntu-latest
#    name: Deploy to Firebase App Distribution
#    steps:
#      - uses: actions/checkout@v2
#      - name: set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#
#      - name: Upload Debug APK to Firebase App Distribution
#        if: ${{ env.INPUT_BUILD_DEBUG_APK == 'true' }}
#        uses: gradle/gradle-build-action@v2
#        with:
#          arguments: -q assembleDebug appDistributionUploadDebug --releaseNotes="${{ env.RELEASE_NOTES_DEBUG }}"
#
#      - name: Upload Release APK to Firebase App Distribution
#        if: ${{ env.INPUT_BUILD_RELEASE_APK == 'true' }}
#        run: ./gradlew assembleRelease appDistributionUploadRelease --groups="${{ env.TEST_GROUPS_RELEASE }}" --releaseNotes="${{ env.RELEASE_NOTES_DEBUG }}"
